expose:
  # Set the way how to expose the service. Set the type as "ingress",
  # "clusterIP", "nodePort" or "loadBalancer" and fill the information
  # in the corresponding section
  tls:
    auto:
      # The common name used to generate the certificate, it's necessary
      # when the type isn't "ingress"
      commonName: harbor.dbnt.shop

# The external URL for Harbor core service. It is used to
# 1) populate the docker/helm commands showed on portal
# 2) populate the token service URL returned to docker/notary client
#
# Format: protocol://domain[:port]. Usually:
# 1) if "expose.type" is "ingress", the "domain" should be
# the value of "expose.ingress.hosts.core"
# 2) if "expose.type" is "clusterIP", the "domain" should be
# the value of "expose.clusterIP.name"
# 3) if "expose.type" is "nodePort", the "domain" should be
# the IP address of k8s node
#
# If Harbor is deployed behind the proxy, set it as the URL of proxy
externalURL: https://harbor.dbnt.shop
# use internal repository
nginx:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/nginx-photon:v2.3.1
portal:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/harbor-portal:v2.3.1
core:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/harbor-core:v2.3.1
jobservice:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/harbor-jobservice:v2.3.1
registry:
  registry:
    image:
      repository: harbor.clouddari.com/cicd/goharbor/registry-photon:v2.3.1
  controller:
    image:
      repository: harbor.clouddari.com/cicd/goharbor/harbor-registryctl:v2.3.1
chartmuseum:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/chartmuseum-photon:v2.3.1
trivy:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/trivy-adapter-photon:v2.3.1
notary:
  server:
    image:
      repository: harbor.clouddari.com/cicd/goharbor/notary-server-photon:v2.3.1
  signer:
    image:
      repository: harbor.clouddari.com/cicd/goharbor/notary-signer-photon:v2.3.1
database:
  internal:
    image:
      repository: harbor.clouddari.com/cicd/goharbor/harbor-db:v2.3.1
redis:
  internal:
    image:
      repository: harbor.clouddari.com/cicd/goharbor/redis-photon:v2.3.1
exporter:
  image:
    repository: harbor.clouddari.com/cicd/goharbor/harbor-exporter:v2.3.1